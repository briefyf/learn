<build>  
    <sourceDirectory>src</sourceDirectory>  
    <plugins>  
        <plugin>  
            <groupId>com.pyx4me</groupId>  
            <artifactId>proguard-maven-plugin</artifactId>  
            <executions>  
                <execution>  
                    <phase>package</phase>  
                    <goals>  
                        <goal>proguard</goal>  
                    </goals>  
                </execution>  
            </executions>  
            <configuration>  
                <obfuscate>true</obfuscate>  
                <proguardInclude>${basedir}/proguard.conf</proguardInclude>  
                <!-- 添加依赖，这里你可以按你的需要修改 -->  
                <libs>  
                    <lib>${java.home}/lib/rt.jar</lib>  
                </libs>   
                <addMavenDescriptor>false</addMavenDescriptor>  
            </configuration>  
        </plugin>  
        <plugin>  
            <artifactId>maven-compiler-plugin</artifactId>  
            <version>3.1</version>  
            <configuration>  
                <source>1.6</source>  
                <target>1.6</target>  
            </configuration>  
        </plugin>  
    </plugins>  
</build>  


在 pom.xml同级目录增加 proguard.conf 可以在proguardInclude节点修改这个




#忽略警告信息  
-ignorewarnings  
#不做 shrink  
-dontshrink  
#指定不去忽略包可见的库类的成员  
-dontskipnonpubliclibraryclassmembers  
#  通过指定数量的优化能执行  
-optimizationpasses 3  
#   混淆时不会产生形形色色的类名   
#-dontusemixedcaseclassnames  
#      指定不去忽略非公共的库类  
-dontskipnonpubliclibraryclasses  
#       不预校验  
# -dontpreverify  
#      输出生成信息  
-verbose  
#混淆时应用侵入式重载   
-overloadaggressively   
#优化时允许访问并修改有修饰符的类和类的成员   
-allowaccessmodification  
#确定统一的混淆类的成员名称来增加混淆   
-useuniqueclassmembernames  
  
#这里添加你不需要混淆的类  
# --------- 保护类中的所有方法名 ------------  
-keepattributes Exceptions,InnerClasses,Signature,Deprecated,SourceFile,LineNumberTable,*Annotation*,EnclosingMethod  
-keep class cn.chinarb.outward.**{  
*;}  
  
-keep class com.joker.utils.**{  
*;}  


